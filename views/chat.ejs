<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css" integrity="sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk=" crossorigin="anonymous" />
    <link rel="stylesheet" href="/css/style.css" />
    <title>üèÖSportTalk AppüèÖ</title>

</head>

<body>
    <div class="chat-container">
        <header class="chat-header">
            <h1>üèÖSportTalk</h1>

            <a id="leave-btn" class="btn">Leave Room</a>
        </header>
        <main class="chat-main">
            <div class="chat-sidebar">
                <% if(room_type==="public"){ %>
                    <h3><i class="fas fa-comments"></i> Room Name :</h3>
                    <h2 id="room-name">
                        <%= name %>
                    </h2>
                    <a href="/livescore/<%=sport%>/<%=matchid%>" class="white key" target="_blank">
                        <h3><i class="fas fa-clipboard"></i> Check Score</h3>
                    </a>
                    <a href="" class="white" target="_blank" style="display:none;">
                        <h3><i class="fas fa-laptop"></i> Watch Live</h3>
                    </a>
                    <%}else{%>
                        <h3><i class="fas fa-comments"></i> Room Name/Room Id:</h3>
                        <h2 id="room-name">
                            <%= name %>/
                                <%= room_id %>
                        </h2>

                        <% }%>

                            <h3><i class="fas fa-users"></i> Active Users : <span class="numberactiveusers"></span></h3>
                            <ul id="users">
                                <%for(let i=0;i<list.length;i++){%>

                                    <li>
                                        <%= list[i] %>
                                    </li>


                                    <%}%>
                            </ul>

            </div>
            <div class="chat-messages"></div>
        </main>
        <div class="chat-form-container">
            <form id="chat-form">
                <input id="msg" type="text" placeholder="Enter Message" required autocomplete="off" />
                <button type="submit" class="btn"><i class="fas fa-paper-plane"></i> Send</button>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.9.2/qs.min.js" integrity="sha256-TDxXjkAUay70ae/QJBEpGKkpVslXaHHayklIVglFRT4=" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io();



        socket.on("useradded", function(newuser, kusers) {


            let flag = 0;
            var li = document.getElementById("users");
            var arr = li.childNodes;
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].innerText === newuser) {
                    flag = 1;
                    break;
                }
            }
            if (flag === 0) {

                var ul = document.getElementById("users");
                var li = document.createElement("li");
                li.appendChild(document.createTextNode(newuser));
                ul.appendChild(li);
            }

            var a = document.getElementById("users");
            lis = [];
            var array = a.childNodes;

            for (let i = 0; i < array.length; i++) {
                lis.push(array[i].innerText);
            }



            for (let j = 0; j < kusers.length; j++) {
                if (!lis.includes(kusers[j])) {
                    var x = document.getElementById("users");
                    var y = document.createElement("li");
                    y.appendChild(document.createTextNode(kusers[j]));
                    x.appendChild(y);
                }
            }








        });

        socket.on("userdisconnected", function(disconnected_user) {
            var li = document.getElementById("users");
            var arr = li.childNodes;
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].innerText === disconnected_user) {
                    li.removeChild(li.childNodes[i]);
                }
            }

        });
        <% if(room_type==="public"){ %>

        socket.emit("room", "<%=name%>", "<%=user.username %>", {
            room_type: "<%=room_type%>"
        });
        <%} else {  %>
        socket.emit("room", "<%=name%>", "<%=user.username %>", {
            room_type: "<%=room_type%>",
            room_id: "<%= room_id %>"
        });

        <% } %>

        <% if(room_type==="public"){ %>

        socket.emit("new_user", "<%=user.username %>", "<%=name%>", {
            room_type: "<%=room_type%>"
        });
        <%} else {  %>
        socket.emit("new_user", "<%=user.username %>", "<%=name%>", {
            room_type: "<%=room_type%>",
            room_id: "<%= room_id %>"
        });

        <% } %>



        document.getElementById('leave-btn').addEventListener('click', () => {
            const leaveRoom = confirm('Are you sure you want to leave the chatroom?');
            if (leaveRoom) {
                window.location.href = '/roomassign';
            } else {}
        });
        const chatForm = document.getElementById('chat-form');
        const chatMessages = document.querySelector('.chat-messages');
        const roomName = document.getElementById('room-name');
        const userList = document.getElementById('users');
        socket.on('message', (message) => {
            console.log(message);
            outputMessage(message);

            // Scroll down
            chatMessages.scrollTop = chatMessages.scrollHeight;
        });

        function outputMessage(message) {
            const div = document.createElement('div');
            div.classList.add('message');
            const p = document.createElement('p');
            p.classList.add('meta');
            p.innerText = message.username;
            p.innerHTML += `<span> ${message.time}</span>`;
            div.appendChild(p);
            const para = document.createElement('p');
            para.classList.add('text');
            para.innerText = message.text;
            div.appendChild(para);
            document.querySelector('.chat-messages').appendChild(div);
        }
        chatForm.addEventListener('submit', (e) => {
            e.preventDefault();

            // Get message text
            let msg = e.target.elements.msg.value;

            msg = msg.trim();

            if (!msg) {
                return false;
            }

            // Emit message to server
            <% if(room_type==="public"){ %>

            socket.emit('chatMessage', msg, "<%=name%>", "<%=user.username %>");
            <%} else {  %>
            socket.emit('chatMessage', msg, "<%=room_id%>", "<%=user.username %>");

            <% } %>



            // Clear input
            e.target.elements.msg.value = '';
            e.target.elements.msg.focus();
        });
    </script>
</body>

</html>